streamlit>=1.30.0
pandas>=2.0.0
matplotlib>=3.7.0
seaborn>=0.12.0




def display_filtered_results(df):
    st.subheader("📊 Plagiarism Similarity Results")

    # Create Similarity Range for all later use
    bins = [0, 20, 40, 60, 80, 100]
    labels = ['0-20%', '21-40%', '41-60%', '61-80%', '81-100%']
    df['Similarity Range'] = pd.cut(df["Similarity %"], bins=bins, labels=labels, include_lowest=True)

    threshold = st.slider("🎛️ Show pairs with similarity ≥", 0, 100, 80)
    filtered_df = df[df["Similarity %"] >= threshold]

    file_matches = {}
    for _, row in filtered_df.iterrows():
        f1, f2, sim = row["File 1"], row["File 2"], row["Similarity %"]
        file_matches.setdefault(f1, []).append((f2, sim))
        file_matches.setdefault(f2, []).append((f1, sim))

    for main_file, matches in file_matches.items():
        html = f'<div><strong>📄 {main_file}</strong><div style="display: flex; overflow-x: auto;">'
        for other_file, sim in sorted(matches, key=lambda x: x[1], reverse=True):
            color = "#c62828" if sim >= 80 else "#f9a825" if sim >= 50 else "#2e7d32"
            html += f'''
            <div style="
                border-radius: 20px; padding: 5px 12px; margin-right: 6px;
                background-color: {color}; color: white; white-space: nowrap;
                ">
                {other_file} ({sim:.1f}%)
            </div>'''
        html += '</div></div><br>'
        st.markdown(html, unsafe_allow_html=True)

    range_counts = df['Similarity Range'].value_counts().sort_index()
    fig = px.pie(
        values=range_counts,
        names=range_counts.index,
        title="Overall Plagiarism Distribution"
    )
    st.plotly_chart(fig, use_container_width=True)
